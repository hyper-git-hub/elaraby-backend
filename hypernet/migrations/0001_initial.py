# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-11-21 08:20
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django_enumfield.enum
import hypernet.enums


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customer', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('comments', models.CharField(max_length=1500)),
                ('modified_datetime', models.DateTimeField(blank=True, null=True)),
                ('created_datetime', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AssignmentHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('comments', models.CharField(max_length=1500)),
                ('modified_datetime', models.DateTimeField(blank=True, null=True)),
                ('created_datetime', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeviceCalibration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actual_value', models.DecimalField(decimal_places=5, max_digits=20, null=True)),
                ('calibrated_value', models.DecimalField(decimal_places=5, max_digits=20, null=True)),
                ('created_datetime', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeviceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('category', models.IntegerField(choices=[(1, django_enumfield.enum.Value('ENTITY', 1, 'Entity', hypernet.enums.DeviceCategoryEnum)), (2, django_enumfield.enum.Value('ASSIGNMENT', 2, 'Assignment', hypernet.enums.DeviceCategoryEnum))], default=1)),
                ('created_datetime', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeviceViolation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_value', models.DecimalField(blank=True, decimal_places=3, max_digits=20, null=True)),
                ('string_value', models.CharField(blank=True, max_length=50, null=True)),
                ('enabled', models.BooleanField(default=False)),
                ('created_datetime', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('created_datetime', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_datetime', models.DateTimeField(blank=True, null=True)),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
                ('assignments', models.IntegerField(blank=True, default=0, null=True)),
                ('device_id', models.CharField(blank=True, max_length=50, null=True)),
                ('speed', models.NullBooleanField(default=False)),
                ('volume', models.NullBooleanField(default=False)),
                ('density', models.NullBooleanField(default=False)),
                ('temperature', models.NullBooleanField(default=False)),
                ('location', models.NullBooleanField(default=False)),
                ('registration', models.CharField(blank=True, max_length=15, null=True)),
                ('engine_number', models.CharField(blank=True, max_length=50, null=True)),
                ('chassis_number', models.CharField(blank=True, max_length=50, null=True)),
                ('make', models.CharField(blank=True, max_length=50, null=True)),
                ('model', models.CharField(blank=True, max_length=50, null=True)),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('odo_reading', models.IntegerField(blank=True, null=True)),
                ('engine_capacity', models.IntegerField(blank=True, null=True)),
                ('wheels', models.IntegerField(blank=True, null=True)),
                ('volume_capacity', models.IntegerField(blank=True, null=True)),
                ('date_commissioned', models.DateField(blank=True, null=True)),
                ('obd2_compliant', models.NullBooleanField(default=False)),
                ('cnic', models.CharField(blank=True, max_length=100, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('date_of_joining', models.DateField(blank=True, null=True)),
                ('salary', models.IntegerField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='')),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('source_address', models.CharField(blank=True, max_length=250, null=True)),
                ('destination_address', models.CharField(blank=True, max_length=250, null=True)),
                ('destination_latlong', models.CharField(blank=True, max_length=250, null=True)),
                ('source_latlong', models.CharField(blank=True, max_length=250, null=True)),
                ('job_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('job_end_datetime', models.DateTimeField(blank=True, null=True)),
                ('territory', models.CharField(blank=True, max_length=10000, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('squad_number', models.IntegerField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('ethnicity', models.CharField(blank=True, max_length=50, null=True)),
                ('past_club', models.CharField(blank=True, max_length=50, null=True)),
                ('player_position', models.CharField(blank=True, max_length=50, null=True)),
                ('date_of_match', models.DateField(blank=True, db_index=True, null=True)),
                ('weather_forecast', models.CharField(blank=True, max_length=250, null=True)),
                ('lactation_days', models.IntegerField(blank=True, default=0, null=True)),
                ('last_breeding', models.DateTimeField(blank=True, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EntityAssociative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mapped_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='EntityHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('created_datetime', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_datetime', models.DateTimeField(blank=True, null=True)),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
                ('assignments', models.IntegerField(blank=True, default=0, null=True)),
                ('device_id', models.CharField(blank=True, max_length=50, null=True)),
                ('speed', models.NullBooleanField(default=False)),
                ('volume', models.NullBooleanField(default=False)),
                ('density', models.NullBooleanField(default=False)),
                ('temperature', models.NullBooleanField(default=False)),
                ('location', models.NullBooleanField(default=False)),
                ('registration', models.CharField(blank=True, max_length=15, null=True)),
                ('engine_number', models.CharField(blank=True, max_length=50, null=True)),
                ('chassis_number', models.CharField(blank=True, max_length=50, null=True)),
                ('make', models.CharField(blank=True, max_length=50, null=True)),
                ('model', models.CharField(blank=True, max_length=50, null=True)),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('odo_reading', models.IntegerField(blank=True, null=True)),
                ('engine_capacity', models.IntegerField(blank=True, null=True)),
                ('wheels', models.IntegerField(blank=True, null=True)),
                ('volume_capacity', models.IntegerField(blank=True, null=True)),
                ('date_commissioned', models.DateField(blank=True, null=True)),
                ('obd2_compliant', models.NullBooleanField(default=False)),
                ('cnic', models.CharField(blank=True, max_length=100, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('date_of_joining', models.DateField(blank=True, null=True)),
                ('salary', models.IntegerField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='')),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('source_address', models.CharField(blank=True, max_length=250, null=True)),
                ('destination_address', models.CharField(blank=True, max_length=250, null=True)),
                ('destination_latlong', models.CharField(blank=True, max_length=250, null=True)),
                ('source_latlong', models.CharField(blank=True, max_length=250, null=True)),
                ('job_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('job_end_datetime', models.DateTimeField(blank=True, null=True)),
                ('territory', models.CharField(blank=True, max_length=10000, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('squad_number', models.IntegerField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('ethnicity', models.CharField(blank=True, max_length=50, null=True)),
                ('past_club', models.CharField(blank=True, max_length=50, null=True)),
                ('contracted_type', models.CharField(blank=True, max_length=50, null=True)),
                ('player_position', models.CharField(blank=True, max_length=50, null=True)),
                ('changed_fields', models.CharField(blank=True, max_length=1500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HypernetNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(db_index=True)),
                ('threshold', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('value', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('latitude', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('longitude', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('created_datetime', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='HypernetPostData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(db_index=True)),
                ('volume', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('temperature', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('density', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('speed', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('latitude', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('longitude', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('harsh_braking', models.BooleanField()),
                ('harsh_acceleratioin', models.BooleanField()),
                ('trip', models.BooleanField()),
                ('created_datetime', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('timezone', models.CharField(blank=True, max_length=25, null=True)),
                ('nn_interval', models.IntegerField()),
                ('accelerometer_1', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('accelerometer_2', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('accelerometer_3', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('hrv_value', models.IntegerField()),
                ('breathingrate_avg', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('breathingrate_min', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('breathingrate_max', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('duration', models.IntegerField()),
                ('heartrate_value', models.IntegerField()),
                ('heartrate_recovery', models.IntegerField()),
                ('distance_by_sensor', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('processed', models.BooleanField(default=False)),
                ('live', models.BooleanField(default=True)),
                ('distance', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('volume_consumed', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HypernetPreData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device', models.CharField(blank=True, max_length=25, null=True)),
                ('type', models.CharField(blank=True, max_length=25, null=True)),
                ('timestamp', models.DateTimeField(db_index=True)),
                ('volume', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('temperature', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('density', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('speed', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('latitude', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('longitude', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('harsh_braking', models.BooleanField()),
                ('harsh_acceleratioin', models.BooleanField()),
                ('trip', models.BooleanField()),
                ('timezone', models.CharField(blank=True, max_length=25, null=True)),
                ('nn_interval', models.IntegerField()),
                ('accelerometer_1', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('accelerometer_2', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('accelerometer_3', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('hrv_value', models.IntegerField()),
                ('breathingrate_avg', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('breathingrate_min', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('breathingrate_max', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
                ('duration', models.IntegerField()),
                ('heartrate_value', models.IntegerField()),
                ('heartrate_recovery', models.IntegerField()),
                ('distance_by_sensor', models.DecimalField(decimal_places=3, max_digits=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RoleAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified_datetime', models.DateTimeField(blank=True, null=True)),
                ('created_datetime', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RoleAssignmentHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified_datetime', models.DateTimeField(blank=True, null=True)),
                ('created_datetime', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.Customer')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entity_parent_history', to='hypernet.Entity')),
            ],
        ),
        migrations.CreateModel(
            name='Translations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified_datetime', models.DateTimeField(blank=True, null=True)),
                ('created_datetime', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('trans_key', models.CharField(max_length=100, unique=True)),
                ('trans_value', models.CharField(max_length=250)),
                ('trans_value_en', models.CharField(max_length=250, null=True)),
                ('trans_value_de', models.CharField(max_length=250, null=True)),
                ('trans_value_pl', models.CharField(max_length=250, null=True)),
                ('trans_value_it', models.CharField(max_length=250, null=True)),
                ('trans_value_fr', models.CharField(max_length=250, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
